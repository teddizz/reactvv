{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Willy\\\\Desktop\\\\reactvv\\\\src\\\\components\\\\Editor.js\";\nimport React from \"react\";\nimport ReactQuill from \"react-quill\";\n/**importing quill styles */\n\nimport 'react-quill/dist/quill.snow.css';\n\nclass Editor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      placeholder: 'Get Creative...',\n      text: '',\n      editorModules: {\n        toolbar: [[{\n          'header': '1'\n        }, {\n          'header': '2'\n        }, {\n          'font': []\n        }], [{\n          size: []\n        }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n          'list': 'ordered'\n        }, {\n          'list': 'bullet'\n        }, {\n          'indent': '-1'\n        }, {\n          'indent': '+1'\n        }], ['link', 'image', 'video'], ['clean']],\n        clipboard: {\n          // toggle to add extra line breaks when pasting HTML:\n          matchVisual: false\n        }\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /**Controlled component. Any change/stroke of a key updates the state \r\n   * of the Editor component.\r\n   */\n\n\n  handleChange(value) {\n    this.setState({\n      text: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactQuill, {\n      value: this.state.text,\n      onChange: this.handleChange,\n      placeholder: this.state.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Editor;","map":{"version":3,"sources":["C:/Users/Willy/Desktop/reactvv/src/components/Editor.js"],"names":["React","ReactQuill","Editor","Component","constructor","state","placeholder","text","editorModules","toolbar","size","clipboard","matchVisual","handleChange","bind","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA;;AACA,OAAO,iCAAP;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAE,iBADN;AAEPC,MAAAA,IAAI,EAAE,EAFC;AAGPC,MAAAA,aAAa,EAAE;AACXC,QAAAA,OAAO,EAAE,CACP,CAAC;AAAE,oBAAU;AAAZ,SAAD,EAAmB;AAAC,oBAAU;AAAX,SAAnB,EAAoC;AAAE,kBAAQ;AAAV,SAApC,CADO,EAEP,CAAC;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAD,CAFO,EAGP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHO,EAIP,CAAC;AAAC,kBAAQ;AAAT,SAAD,EAAsB;AAAC,kBAAQ;AAAT,SAAtB,EACC;AAAC,oBAAU;AAAX,SADD,EACmB;AAAC,oBAAU;AAAX,SADnB,CAJO,EAMP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CANO,EAOP,CAAC,OAAD,CAPO,CADE;AAUXC,QAAAA,SAAS,EAAE;AACT;AACAC,UAAAA,WAAW,EAAE;AAFJ;AAVA;AAHR,KAAX;AAmBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;AAED;;;;;AAGAD,EAAAA,YAAY,CAACE,KAAD,EAAO;AACf,SAAKC,QAAL,CAAc;AAACT,MAAAA,IAAI,EAACQ;AAAN,KAAd;AACH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,UAAD;AACI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,IADtB;AAEI,MAAA,QAAQ,EAAE,KAAKM,YAFnB;AAGI,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWC,WAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAzC+B;;AA4CpC,eAAeJ,MAAf","sourcesContent":["import React from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\n\r\n/**importing quill styles */\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nclass Editor extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            placeholder: 'Get Creative...',\r\n            text: '',\r\n            editorModules: {\r\n                toolbar: [\r\n                  [{ 'header': '1'}, {'header': '2'}, { 'font': [] }],\r\n                  [{size: []}],\r\n                  ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n                  [{'list': 'ordered'}, {'list': 'bullet'}, \r\n                   {'indent': '-1'}, {'indent': '+1'}],\r\n                  ['link', 'image', 'video'],\r\n                  ['clean']\r\n                ],\r\n                clipboard: {\r\n                  // toggle to add extra line breaks when pasting HTML:\r\n                  matchVisual: false,\r\n                }\r\n              }\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    /**Controlled component. Any change/stroke of a key updates the state \r\n     * of the Editor component.\r\n     */\r\n    handleChange(value){\r\n        this.setState({text:value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ReactQuill \r\n                value={this.state.text}\r\n                onChange={this.handleChange}\r\n                placeholder={this.state.placeholder}\r\n                \r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Editor;"]},"metadata":{},"sourceType":"module"}